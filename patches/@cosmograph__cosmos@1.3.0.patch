diff --git a/dist/config.d.ts b/dist/config.d.ts
index ae3677db2b033bf6e4110d571a26c7556cff38f6..b85e008e0820eb8f3c04f7ca0afdce3598132a32 100644
--- a/dist/config.d.ts
+++ b/dist/config.d.ts
@@ -3,6 +3,7 @@ import { CosmosInputNode, CosmosInputLink } from "./types";
 export declare type NumericAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[]) => number | null) | number | null | undefined;
 export declare type StringAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[]) => string | null) | string | null | undefined;
 export declare type ColorAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[]) => string | [number, number, number, number] | null) | string | [number, number, number, number] | null | undefined;
+export declare type BooleanAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[]) => boolean | null) | boolean | null | undefined;
 export interface GraphEvents<N extends CosmosInputNode> {
     /**
      * Callback function that will be called on every canvas click.
@@ -222,7 +223,7 @@ export interface GraphConfigInterface<N extends CosmosInputNode, L extends Cosmo
      * Turns link arrow rendering on / off.
      * Default value: `true`
      */
-    linkArrows?: boolean;
+    linkArrows?: BooleanAccessor<L>;
     /**
      * Scale factor for the link arrows size.
      * Default value: `1`
diff --git a/dist/helper.d.ts b/dist/helper.d.ts
index bbbdd75c1ca3ebd444cae26adc8755b16ca148c9..7f5f476564dfb7d1e19b05f7602727bf917387fd 100644
--- a/dist/helper.d.ts
+++ b/dist/helper.d.ts
@@ -1,11 +1,11 @@
 import regl from 'regl';
-import { ColorAccessor, NumericAccessor, StringAccessor } from './config';
+import { ColorAccessor, NumericAccessor, StringAccessor, BooleanAccessor } from './config';
 export declare const isFunction: <T>(a: T) => boolean;
 export declare const isArray: <T>(a: unknown) => a is T[];
 export declare const isObject: <T>(a: T) => boolean;
 export declare const isAClassInstance: <T>(a: T) => boolean;
 export declare const isPlainObject: <T>(a: T) => boolean;
-export declare function getValue<T, ReturnType>(d: T, accessor: NumericAccessor<T> | StringAccessor<T> | ColorAccessor<T>, index?: number): ReturnType | null | undefined;
+export declare function getValue<T, ReturnType>(d: T, accessor: NumericAccessor<T> | StringAccessor<T> | ColorAccessor<T> | BooleanAccessor<T>, index?: number): ReturnType | null | undefined;
 export declare function getString<T>(d: T, accessor: StringAccessor<T>, i?: number): string | null | undefined;
 export declare function getNumber<T>(d: T, accessor: NumericAccessor<T>, i?: number): number | null | undefined;
 export declare function getRgbaColor(value: string | [number, number, number, number]): [number, number, number, number];
diff --git a/dist/index.js b/dist/index.js
index 7643d27bc28ad0b87fe73164f54234e32b91d989..c72da2e82dc44be0b14b446dc55ec222adc85702 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -1386,14 +1386,15 @@ class GraphData {
     }
 }
 
-var drawStraightFrag = "precision highp float;\n#define GLSLIFY 1\nuniform bool useArrow;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}void main(){float opacity=1.0;vec3 color=rgbaColor.rgb;float smoothDelta=smoothWidthRatio/2.0;if(useArrow){float end_arrow=0.5+arrowLength/2.0;float start_arrow=end_arrow-arrowLength;float arrowWidthDelta=linkWidthArrowWidthRatio/2.0;float linkOpacity=rgbaColor.a*smoothstep(0.5-arrowWidthDelta,0.5-arrowWidthDelta-smoothDelta,abs(pos.y));float arrowOpacity=1.0;if(pos.x>start_arrow&&pos.x<start_arrow+arrowLength){float xmapped=map(pos.x,start_arrow,end_arrow,0.0,1.0);arrowOpacity=rgbaColor.a*smoothstep(xmapped-smoothDelta,xmapped,map(abs(pos.y),0.5,0.0,0.0,1.0));if(linkOpacity!=arrowOpacity){linkOpacity+=arrowOpacity;}}opacity=linkOpacity;}else opacity=rgbaColor.a*smoothstep(0.5,0.5-smoothDelta,abs(pos.y));gl_FragColor=vec4(color,opacity);}"; // eslint-disable-line
+var drawStraightFrag = "precision highp float;\n#define GLSLIFY 1\nvarying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;varying float arrowBoolean;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}void main(){float opacity=1.0;vec3 color=rgbaColor.rgb;float smoothDelta=smoothWidthRatio/2.0;if(arrowBoolean>0.5){float end_arrow=0.5+arrowLength/2.0;float start_arrow=end_arrow-arrowLength;float arrowWidthDelta=linkWidthArrowWidthRatio/2.0;float linkOpacity=rgbaColor.a*smoothstep(0.5-arrowWidthDelta,0.5-arrowWidthDelta-smoothDelta,abs(pos.y));float arrowOpacity=1.0;if(pos.x>start_arrow&&pos.x<start_arrow+arrowLength){float xmapped=map(pos.x,start_arrow,end_arrow,0.0,1.0);arrowOpacity=rgbaColor.a*smoothstep(xmapped-smoothDelta,xmapped,map(abs(pos.y),0.5,0.0,0.0,1.0));if(linkOpacity!=arrowOpacity){linkOpacity+=arrowOpacity;}}opacity=linkOpacity;}else opacity=rgbaColor.a*smoothstep(0.5,0.5-smoothDelta,abs(pos.y));gl_FragColor=vec4(color,opacity);}"; // eslint-disable-line
 
-var drawStraightVert = "precision highp float;\n#define GLSLIFY 1\nattribute vec2 position,pointA,pointB;attribute vec4 color;attribute float width;uniform sampler2D positions;uniform sampler2D particleSize;uniform sampler2D particleGreyoutStatus;uniform mat3 transform;uniform float pointsTextureSize;uniform float widthScale;uniform float nodeSizeScale;uniform bool useArrow;uniform float arrowSizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform vec2 linkVisibilityDistanceRange;uniform float linkVisibilityMinTransparency;uniform float greyoutOpacity;uniform bool scaleNodesOnZoom;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return pSize;}void main(){pos=position;vec2 pointTexturePosA=(pointA+0.5)/pointsTextureSize;vec2 pointTexturePosB=(pointB+0.5)/pointsTextureSize;vec4 greyoutStatusA=texture2D(particleGreyoutStatus,pointTexturePosA);vec4 greyoutStatusB=texture2D(particleGreyoutStatus,pointTexturePosB);targetPointSize=pointSize(texture2D(particleSize,pointTexturePosB).r*nodeSizeScale);vec4 pointPositionA=texture2D(positions,pointTexturePosA);vec4 pointPositionB=texture2D(positions,pointTexturePosB);vec2 a=pointPositionA.xy;vec2 b=pointPositionB.xy;vec2 xBasis=b-a;vec2 yBasis=normalize(vec2(-xBasis.y,xBasis.x));vec2 distVector=a-b;float linkDist=sqrt(dot(distVector,distVector));float linkDistPx=linkDist*transform[0][0];targetPointSize=(targetPointSize/(2.0*ratio))/linkDistPx;float linkWidth=width*widthScale;float k=2.0;float arrowWidth=max(5.0,linkWidth*k);arrowWidth*=arrowSizeScale;float arrowWidthPx=arrowWidth/transform[0][0];arrowLength=min(0.3,(0.866*arrowWidthPx*2.0)/linkDist);float smoothWidth=2.0;float arrowExtraWidth=arrowWidth-linkWidth;linkWidth+=smoothWidth/2.0;if(useArrow){linkWidth+=arrowExtraWidth;}smoothWidthRatio=smoothWidth/linkWidth;linkWidthArrowWidthRatio=arrowExtraWidth/linkWidth;float linkWidthPx=linkWidth/transform[0][0];vec3 rgbColor=color.rgb;float opacity=color.a*max(linkVisibilityMinTransparency,map(linkDistPx,linkVisibilityDistanceRange.g,linkVisibilityDistanceRange.r,0.0,1.0));if(greyoutStatusA.r>0.0||greyoutStatusB.r>0.0){opacity*=greyoutOpacity;}rgbaColor=vec4(rgbColor,opacity);vec2 point=a+xBasis*position.x+yBasis*linkWidthPx*position.y;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);}"; // eslint-disable-line
+var drawStraightVert = "precision highp float;\n#define GLSLIFY 1\nattribute vec2 position,pointA,pointB;attribute vec4 color;attribute float width;attribute float arrow;uniform sampler2D positions;uniform sampler2D particleSize;uniform sampler2D particleGreyoutStatus;uniform mat3 transform;uniform float pointsTextureSize;uniform float widthScale;uniform float nodeSizeScale;uniform float arrowSizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform vec2 linkVisibilityDistanceRange;uniform float linkVisibilityMinTransparency;uniform float greyoutOpacity;uniform bool scaleNodesOnZoom;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;varying float arrowBoolean;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}float pointSize(float size){float pSize;if(scaleNodesOnZoom){pSize=size*ratio*transform[0][0];}else{pSize=size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}return pSize;}void main(){pos=position;vec2 pointTexturePosA=(pointA+0.5)/pointsTextureSize;vec2 pointTexturePosB=(pointB+0.5)/pointsTextureSize;vec4 greyoutStatusA=texture2D(particleGreyoutStatus,pointTexturePosA);vec4 greyoutStatusB=texture2D(particleGreyoutStatus,pointTexturePosB);targetPointSize=pointSize(texture2D(particleSize,pointTexturePosB).r*nodeSizeScale);vec4 pointPositionA=texture2D(positions,pointTexturePosA);vec4 pointPositionB=texture2D(positions,pointTexturePosB);vec2 a=pointPositionA.xy;vec2 b=pointPositionB.xy;vec2 xBasis=b-a;vec2 yBasis=normalize(vec2(-xBasis.y,xBasis.x));vec2 distVector=a-b;float linkDist=sqrt(dot(distVector,distVector));float linkDistPx=linkDist*transform[0][0];targetPointSize=(targetPointSize/(2.0*ratio))/linkDistPx;float linkWidth=width*widthScale;float k=2.0;float arrowWidth=max(5.0,linkWidth*k);arrowWidth*=arrowSizeScale;float arrowWidthPx=arrowWidth/transform[0][0];arrowLength=min(0.3,(0.866*arrowWidthPx*2.0)/linkDist);float smoothWidth=2.0;float arrowExtraWidth=arrowWidth-linkWidth;linkWidth+=smoothWidth/2.0;if(arrow>0.5){linkWidth+=arrowExtraWidth;}arrowBoolean=arrow;smoothWidthRatio=smoothWidth/linkWidth;linkWidthArrowWidthRatio=arrowExtraWidth/linkWidth;float linkWidthPx=linkWidth/transform[0][0];vec3 rgbColor=color.rgb;float opacity=color.a*max(linkVisibilityMinTransparency,map(linkDistPx,linkVisibilityDistanceRange.g,linkVisibilityDistanceRange.r,0.0,1.0));if(greyoutStatusA.r>0.0||greyoutStatusB.r>0.0){opacity*=greyoutOpacity;}rgbaColor=vec4(rgbColor,opacity);vec2 point=a+xBasis*position.x+yBasis*linkWidthPx*position.y;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);}"; // eslint-disable-line
 
 class Lines extends CoreModule {
     create() {
         this.updateColor();
         this.updateWidth();
+        this.updateArrow();
     }
     initPrograms() {
         const { reglInstance, config, store, data, points } = this;
@@ -1450,6 +1451,12 @@ class Lines extends CoreModule {
                     offset: Float32Array.BYTES_PER_ELEMENT * 0,
                     stride: Float32Array.BYTES_PER_ELEMENT * 1,
                 },
+                arrow: {
+                    buffer: () => this.arrowBuffer,
+                    divisor: 1,
+                    offset: Float32Array.BYTES_PER_ELEMENT * 0,
+                    stride: Float32Array.BYTES_PER_ELEMENT * 1,
+                },
             },
             uniforms: {
                 positions: () => points === null || points === void 0 ? void 0 : points.currentPositionFbo,
@@ -1459,7 +1466,6 @@ class Lines extends CoreModule {
                 pointsTextureSize: () => store.pointsTextureSize,
                 nodeSizeScale: () => config.nodeSizeScale,
                 widthScale: () => config.linkWidthScale,
-                useArrow: () => config.linkArrows,
                 arrowSizeScale: () => config.linkArrowsSizeScale,
                 spaceSize: () => config.spaceSize,
                 screenSize: () => store.screenSize,
@@ -1520,10 +1526,20 @@ class Lines extends CoreModule {
         });
         this.widthBuffer = reglInstance.buffer(instancePoints);
     }
+    updateArrow() {
+        const { reglInstance, config, data } = this;
+        const instancePoints = [];
+        data.completeLinks.forEach(l => {
+            const useArrow = getValue(l, config.linkArrows);
+            instancePoints.push([useArrow ? 1 : 0 ]);
+        });
+        this.arrowBuffer = reglInstance.buffer(instancePoints);
+    }
     destroy() {
-        var _a, _b;
+        var _a, _b, _c;
         (_a = this.colorBuffer) === null || _a === void 0 ? void 0 : _a.destroy();
         (_b = this.widthBuffer) === null || _b === void 0 ? void 0 : _b.destroy();
+        (_c = this.arrowBuffer) === null || _c === void 0 ? void 0 : _c.destroy();
     }
 }
 
@@ -2263,6 +2279,8 @@ class Graph {
             this.points.updateSize();
         if (prevConfig.linkWidth !== this.config.linkWidth)
             this.lines.updateWidth();
+        if (prevConfig.linkArrows !== this.config.linkArrows)
+            this.lines.updateArrow();
         if (prevConfig.backgroundColor !== this.config.backgroundColor)
             this.store.backgroundColor = getRgbaColor(this.config.backgroundColor);
         if (prevConfig.highlightedNodeRingColor !== this.config.highlightedNodeRingColor) {
diff --git a/dist/index.js.map b/dist/index.js.map
index 9b409490b0908d20d11ae195d16f4eaaabd22847..82b22d61b4df05ddc6d33dc77b9d8c1d15c14a95 100644
--- a/dist/index.js.map
+++ b/dist/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":["../node_modules/gl-bench/dist/gl-bench.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.GLBench = factory());\n}(this, (function () { 'use strict';\n\n  var UISVG = \"<div class=\\\"gl-box\\\">\\n  <svg viewBox=\\\"0 0 55 60\\\">\\n    <text x=\\\"27\\\" y=\\\"56\\\" class=\\\"gl-fps\\\">00 FPS</text>\\n    <text x=\\\"28\\\" y=\\\"8\\\" class=\\\"gl-mem\\\"></text>\\n    <rect x=\\\"0\\\" y=\\\"14\\\" rx=\\\"4\\\" ry=\\\"4\\\" width=\\\"55\\\" height=\\\"32\\\"></rect>\\n    <polyline class=\\\"gl-chart\\\"></polyline>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-cpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-cpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\\\"/>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-gpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-gpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\\\"/>\\n  </svg>\\n</div>\";\n\n  var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n\n  class GLBench {\n\n    /** GLBench constructor\n     * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n     * @param { Object | undefined } settings additional settings\n     */\n    constructor(gl, settings = {}) {\n      this.css = UICSS;\n      this.svg = UISVG;\n      this.paramLogger = () => {};\n      this.chartLogger = () => {};\n      this.chartLen = 20;\n      this.chartHz = 20;\n\n      this.names = [];\n      this.cpuAccums = [];\n      this.gpuAccums = [];  \n      this.activeAccums = [];\n      this.chart = new Array(this.chartLen);\n      this.now = () => (performance && performance.now) ? performance.now() : Date.now();\n      this.updateUI = () => {\n        [].forEach.call(this.nodes['gl-gpu-svg'], node => {\n          node.style.display = this.trackGPU ? 'inline' : 'none';\n        });\n      };\n\n      Object.assign(this, settings);\n      this.detected = 0;\n      this.finished = [];\n      this.isFramebuffer = 0;\n      this.frameId = 0;\n\n      // 120hz device detection\n      let rafId, n = 0, t0;\n      let loop = (t) => {\n        if (++n < 20) {\n          rafId = requestAnimationFrame(loop);\n        } else {\n          this.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n          cancelAnimationFrame(rafId);\n        }\n        if (!t0) t0 = t;\n      };\n      requestAnimationFrame(loop);\n\n      // attach gpu profilers\n      if (gl) {\n        const glFinish = async (t, activeAccums) =>\n          Promise.resolve(setTimeout(() => {\n            gl.getError();\n            const dt = this.now() - t;\n            activeAccums.forEach((active, i) => {\n              if (active) this.gpuAccums[i] += dt;\n            });\n          }, 0));\n\n        const addProfiler = (fn, self, target) => function() {\n          const t = self.now();\n          fn.apply(target, arguments);\n          if (self.trackGPU) self.finished.push(glFinish(t, self.activeAccums.slice(0)));\n        };\n\n        ['drawArrays', 'drawElements', 'drawArraysInstanced',\n          'drawBuffers', 'drawElementsInstanced', 'drawRangeElements']\n          .forEach(fn => { if (gl[fn]) gl[fn] = addProfiler(gl[fn], this, gl); });\n\n        gl.getExtension = ((fn, self) => function() {\n          let ext = fn.apply(gl, arguments);\n          if (ext) {\n            ['drawElementsInstancedANGLE', 'drawBuffersWEBGL']\n              .forEach(fn => { if (ext[fn]) ext[fn] = addProfiler(ext[fn], self, ext); });\n          }\n          return ext;\n        })(gl.getExtension, this);\n      }\n\n      // init ui and ui loggers\n      if (!this.withoutUI) {\n        if (!this.dom) this.dom = document.body;\n        let elm = document.createElement('div');\n        elm.id = 'gl-bench';\n        this.dom.appendChild(elm);\n        this.dom.insertAdjacentHTML('afterbegin', '<style id=\"gl-bench-style\">' + this.css + '</style>');\n        this.dom = elm;\n        this.dom.addEventListener('click', () => {\n          this.trackGPU = !this.trackGPU;\n          this.updateUI();\n        });\n\n        this.paramLogger = ((logger, dom, names) => {\n          const classes = ['gl-cpu', 'gl-gpu', 'gl-mem', 'gl-fps', 'gl-gpu-svg', 'gl-chart'];\n          const nodes = Object.assign({}, classes);\n          classes.forEach(c => nodes[c] = dom.getElementsByClassName(c));\n          this.nodes = nodes;\n          return (i, cpu, gpu, mem, fps, totalTime, frameId) => {\n            nodes['gl-cpu'][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-gpu'][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-mem'][i].innerHTML = names[i] ? names[i] : (mem ? 'mem: ' + mem.toFixed(0) + 'mb' : '');\n            nodes['gl-fps'][i].innerHTML = fps.toFixed(0) + ' FPS';\n            logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n          }\n        })(this.paramLogger, this.dom, this.names);\n\n        this.chartLogger = ((logger, dom) => {\n          let nodes = { 'gl-chart': dom.getElementsByClassName('gl-chart') };\n          return (i, chart, circularId) => {\n            let points = '';\n            let len = chart.length;\n            for (let i = 0; i < len; i++) {\n              let id = (circularId + i + 1) % len;\n              if (chart[id] != undefined) {\n                points = points + ' ' + (55 * i / (len - 1)).toFixed(1) + ','\n                  + (45 - chart[id] * 22 / 60 / this.detected).toFixed(1);\n              }\n            }\n            nodes['gl-chart'][i].setAttribute('points', points);\n            logger(this.names[i], chart, circularId);\n          }\n        })(this.chartLogger, this.dom);\n      }\n    }\n\n    /**\n     * Explicit UI add\n     * @param { string | undefined } name \n     */\n    addUI(name) {\n      if (this.names.indexOf(name) == -1) {\n        this.names.push(name);\n        if (this.dom) {\n          this.dom.insertAdjacentHTML('beforeend', this.svg);\n          this.updateUI();\n        }\n        this.cpuAccums.push(0);\n        this.gpuAccums.push(0);\n        this.activeAccums.push(false);\n      }\n    }\n\n    /**\n     * Increase frameID\n     * @param { number | undefined } now\n     */\n    nextFrame(now) {\n      this.frameId++;\n      const t = now ? now : this.now();\n\n      // params\n      if (this.frameId <= 1) {\n        this.paramFrame = this.frameId;\n        this.paramTime = t;\n      } else {\n        let duration = t - this.paramTime;\n        if (duration >= 1e3) {\n          const frameCount = this.frameId - this.paramFrame;\n          const fps = frameCount / duration * 1e3;\n          for (let i = 0; i < this.names.length; i++) {\n            const cpu = this.cpuAccums[i] / duration * 100,\n              gpu = this.gpuAccums[i] / duration * 100,\n              mem = (performance && performance.memory) ? performance.memory.usedJSHeapSize / (1 << 20) : 0;\n            this.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n            this.cpuAccums[i] = 0;\n            Promise.all(this.finished).then(() => {\n              this.gpuAccums[i] = 0;\n              this.finished = [];\n            });\n          }\n          this.paramFrame = this.frameId;\n          this.paramTime = t;\n        }\n      }\n\n      // chart\n      if (!this.detected || !this.chartFrame) {\n        this.chartFrame = this.frameId;\n        this.chartTime = t;\n        this.circularId = 0;\n      } else {\n        let timespan = t - this.chartTime;\n        let hz = this.chartHz * timespan / 1e3;\n        while (--hz > 0 && this.detected) {\n          const frameCount = this.frameId - this.chartFrame;\n          const fps = frameCount / timespan * 1e3;\n          this.chart[this.circularId % this.chartLen] = fps;\n          for (let i = 0; i < this.names.length; i++) {\n            this.chartLogger(i, this.chart, this.circularId);\n          }\n          this.circularId++;\n          this.chartFrame = this.frameId;\n          this.chartTime = t;\n        }\n      }\n    }\n\n    /**\n     * Begin named measurement\n     * @param { string | undefined } name\n     */\n    begin(name) {\n      this.updateAccums(name);\n    }\n\n    /**\n     * End named measure\n     * @param { string | undefined } name\n     */\n    end(name) {\n      this.updateAccums(name);\n    }\n\n    updateAccums(name) {\n      let nameId = this.names.indexOf(name);\n      if (nameId == -1) {\n        nameId = this.names.length;\n        this.addUI(name);\n      }\n\n      const t = this.now();\n      const dt = t - this.t0;\n      for (let i = 0; i < nameId + 1; i++) {\n        if (this.activeAccums[i]) {\n          this.cpuAccums[i] += dt;\n        }\n      }    this.activeAccums[nameId] = !this.activeAccums[nameId];\n      this.t0 = t;\n    }\n\n  }\n\n  return GLBench;\n\n})));\n"],"names":["this"],"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B;AACA,EAAC,EAAE,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":["../node_modules/.pnpm/gl-bench@1.0.42/node_modules/gl-bench/dist/gl-bench.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.GLBench = factory());\n}(this, (function () { 'use strict';\n\n  var UISVG = \"<div class=\\\"gl-box\\\">\\n  <svg viewBox=\\\"0 0 55 60\\\">\\n    <text x=\\\"27\\\" y=\\\"56\\\" class=\\\"gl-fps\\\">00 FPS</text>\\n    <text x=\\\"28\\\" y=\\\"8\\\" class=\\\"gl-mem\\\"></text>\\n    <rect x=\\\"0\\\" y=\\\"14\\\" rx=\\\"4\\\" ry=\\\"4\\\" width=\\\"55\\\" height=\\\"32\\\"></rect>\\n    <polyline class=\\\"gl-chart\\\"></polyline>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-cpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-cpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\\\"/>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-gpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-gpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\\\"/>\\n  </svg>\\n</div>\";\n\n  var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n\n  class GLBench {\n\n    /** GLBench constructor\n     * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n     * @param { Object | undefined } settings additional settings\n     */\n    constructor(gl, settings = {}) {\n      this.css = UICSS;\n      this.svg = UISVG;\n      this.paramLogger = () => {};\n      this.chartLogger = () => {};\n      this.chartLen = 20;\n      this.chartHz = 20;\n\n      this.names = [];\n      this.cpuAccums = [];\n      this.gpuAccums = [];  \n      this.activeAccums = [];\n      this.chart = new Array(this.chartLen);\n      this.now = () => (performance && performance.now) ? performance.now() : Date.now();\n      this.updateUI = () => {\n        [].forEach.call(this.nodes['gl-gpu-svg'], node => {\n          node.style.display = this.trackGPU ? 'inline' : 'none';\n        });\n      };\n\n      Object.assign(this, settings);\n      this.detected = 0;\n      this.finished = [];\n      this.isFramebuffer = 0;\n      this.frameId = 0;\n\n      // 120hz device detection\n      let rafId, n = 0, t0;\n      let loop = (t) => {\n        if (++n < 20) {\n          rafId = requestAnimationFrame(loop);\n        } else {\n          this.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n          cancelAnimationFrame(rafId);\n        }\n        if (!t0) t0 = t;\n      };\n      requestAnimationFrame(loop);\n\n      // attach gpu profilers\n      if (gl) {\n        const glFinish = async (t, activeAccums) =>\n          Promise.resolve(setTimeout(() => {\n            gl.getError();\n            const dt = this.now() - t;\n            activeAccums.forEach((active, i) => {\n              if (active) this.gpuAccums[i] += dt;\n            });\n          }, 0));\n\n        const addProfiler = (fn, self, target) => function() {\n          const t = self.now();\n          fn.apply(target, arguments);\n          if (self.trackGPU) self.finished.push(glFinish(t, self.activeAccums.slice(0)));\n        };\n\n        ['drawArrays', 'drawElements', 'drawArraysInstanced',\n          'drawBuffers', 'drawElementsInstanced', 'drawRangeElements']\n          .forEach(fn => { if (gl[fn]) gl[fn] = addProfiler(gl[fn], this, gl); });\n\n        gl.getExtension = ((fn, self) => function() {\n          let ext = fn.apply(gl, arguments);\n          if (ext) {\n            ['drawElementsInstancedANGLE', 'drawBuffersWEBGL']\n              .forEach(fn => { if (ext[fn]) ext[fn] = addProfiler(ext[fn], self, ext); });\n          }\n          return ext;\n        })(gl.getExtension, this);\n      }\n\n      // init ui and ui loggers\n      if (!this.withoutUI) {\n        if (!this.dom) this.dom = document.body;\n        let elm = document.createElement('div');\n        elm.id = 'gl-bench';\n        this.dom.appendChild(elm);\n        this.dom.insertAdjacentHTML('afterbegin', '<style id=\"gl-bench-style\">' + this.css + '</style>');\n        this.dom = elm;\n        this.dom.addEventListener('click', () => {\n          this.trackGPU = !this.trackGPU;\n          this.updateUI();\n        });\n\n        this.paramLogger = ((logger, dom, names) => {\n          const classes = ['gl-cpu', 'gl-gpu', 'gl-mem', 'gl-fps', 'gl-gpu-svg', 'gl-chart'];\n          const nodes = Object.assign({}, classes);\n          classes.forEach(c => nodes[c] = dom.getElementsByClassName(c));\n          this.nodes = nodes;\n          return (i, cpu, gpu, mem, fps, totalTime, frameId) => {\n            nodes['gl-cpu'][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-gpu'][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-mem'][i].innerHTML = names[i] ? names[i] : (mem ? 'mem: ' + mem.toFixed(0) + 'mb' : '');\n            nodes['gl-fps'][i].innerHTML = fps.toFixed(0) + ' FPS';\n            logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n          }\n        })(this.paramLogger, this.dom, this.names);\n\n        this.chartLogger = ((logger, dom) => {\n          let nodes = { 'gl-chart': dom.getElementsByClassName('gl-chart') };\n          return (i, chart, circularId) => {\n            let points = '';\n            let len = chart.length;\n            for (let i = 0; i < len; i++) {\n              let id = (circularId + i + 1) % len;\n              if (chart[id] != undefined) {\n                points = points + ' ' + (55 * i / (len - 1)).toFixed(1) + ','\n                  + (45 - chart[id] * 22 / 60 / this.detected).toFixed(1);\n              }\n            }\n            nodes['gl-chart'][i].setAttribute('points', points);\n            logger(this.names[i], chart, circularId);\n          }\n        })(this.chartLogger, this.dom);\n      }\n    }\n\n    /**\n     * Explicit UI add\n     * @param { string | undefined } name \n     */\n    addUI(name) {\n      if (this.names.indexOf(name) == -1) {\n        this.names.push(name);\n        if (this.dom) {\n          this.dom.insertAdjacentHTML('beforeend', this.svg);\n          this.updateUI();\n        }\n        this.cpuAccums.push(0);\n        this.gpuAccums.push(0);\n        this.activeAccums.push(false);\n      }\n    }\n\n    /**\n     * Increase frameID\n     * @param { number | undefined } now\n     */\n    nextFrame(now) {\n      this.frameId++;\n      const t = now ? now : this.now();\n\n      // params\n      if (this.frameId <= 1) {\n        this.paramFrame = this.frameId;\n        this.paramTime = t;\n      } else {\n        let duration = t - this.paramTime;\n        if (duration >= 1e3) {\n          const frameCount = this.frameId - this.paramFrame;\n          const fps = frameCount / duration * 1e3;\n          for (let i = 0; i < this.names.length; i++) {\n            const cpu = this.cpuAccums[i] / duration * 100,\n              gpu = this.gpuAccums[i] / duration * 100,\n              mem = (performance && performance.memory) ? performance.memory.usedJSHeapSize / (1 << 20) : 0;\n            this.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n            this.cpuAccums[i] = 0;\n            Promise.all(this.finished).then(() => {\n              this.gpuAccums[i] = 0;\n              this.finished = [];\n            });\n          }\n          this.paramFrame = this.frameId;\n          this.paramTime = t;\n        }\n      }\n\n      // chart\n      if (!this.detected || !this.chartFrame) {\n        this.chartFrame = this.frameId;\n        this.chartTime = t;\n        this.circularId = 0;\n      } else {\n        let timespan = t - this.chartTime;\n        let hz = this.chartHz * timespan / 1e3;\n        while (--hz > 0 && this.detected) {\n          const frameCount = this.frameId - this.chartFrame;\n          const fps = frameCount / timespan * 1e3;\n          this.chart[this.circularId % this.chartLen] = fps;\n          for (let i = 0; i < this.names.length; i++) {\n            this.chartLogger(i, this.chart, this.circularId);\n          }\n          this.circularId++;\n          this.chartFrame = this.frameId;\n          this.chartTime = t;\n        }\n      }\n    }\n\n    /**\n     * Begin named measurement\n     * @param { string | undefined } name\n     */\n    begin(name) {\n      this.updateAccums(name);\n    }\n\n    /**\n     * End named measure\n     * @param { string | undefined } name\n     */\n    end(name) {\n      this.updateAccums(name);\n    }\n\n    updateAccums(name) {\n      let nameId = this.names.indexOf(name);\n      if (nameId == -1) {\n        nameId = this.names.length;\n        this.addUI(name);\n      }\n\n      const t = this.now();\n      const dt = t - this.t0;\n      for (let i = 0; i < nameId + 1; i++) {\n        if (this.activeAccums[i]) {\n          this.cpuAccums[i] += dt;\n        }\n      }    this.activeAccums[nameId] = !this.activeAccums[nameId];\n      this.t0 = t;\n    }\n\n  }\n\n  return GLBench;\n\n})));\n"],"names":["this"],"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}
\ No newline at end of file
diff --git a/dist/modules/Lines/index.d.ts b/dist/modules/Lines/index.d.ts
index f1107a41c6f0a4c6a8261f3e098dc1a383d8cbc5..533b78f35fd54ba6a587e02039e3a44d60e59daa 100644
--- a/dist/modules/Lines/index.d.ts
+++ b/dist/modules/Lines/index.d.ts
@@ -4,10 +4,12 @@ export declare class Lines<N extends CosmosInputNode, L extends CosmosInputLink>
     private drawStraightCommand;
     private colorBuffer;
     private widthBuffer;
+    private arrowBuffer;
     create(): void;
     initPrograms(): void;
     draw(): void;
     updateColor(): void;
     updateWidth(): void;
+    updateArrow(): void;
     destroy(): void;
 }
diff --git a/package.json b/package.json
index d9a4f6e0b1426b7619ee4753b647718d199f4176..d5bccae87eabe843d11effffe1c878b1cb763b33 100644
--- a/package.json
+++ b/package.json
@@ -52,7 +52,7 @@
     "rollup-plugin-glslify": "^1.3.0",
     "rollup-plugin-typescript2": "^0.32.1",
     "ttypescript": "^1.5.13",
-    "typescript": "^4.7.4"
+    "typescript": "~4.7.4"
   },
   "dependencies": {
     "d3-array": "^3.2.0",
diff --git a/src/config.ts b/src/config.ts
index 114a333cfa2e26ff62331ebabc4c73ee3ab93f39..49d5f02d2b6d9ced990363838b418f78cbe263c1 100644
--- a/src/config.ts
+++ b/src/config.ts
@@ -16,6 +16,7 @@ export type NumericAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[])
 export type StringAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[]) => string | null) | string | null | undefined
 export type ColorAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[]) => string | [number, number, number, number] | null)
   | string | [number, number, number, number] | null | undefined
+export type BooleanAccessor<Datum> = ((d: Datum, i?: number, ...rest: unknown[]) => boolean | null) | boolean | null | undefined
 
 export interface GraphEvents <N extends CosmosInputNode> {
   /**
@@ -246,7 +247,7 @@ export interface GraphConfigInterface<N extends CosmosInputNode, L extends Cosmo
    * Turns link arrow rendering on / off.
    * Default value: `true`
    */
-  linkArrows?: boolean;
+  linkArrows?: BooleanAccessor<L>;
   /**
    * Scale factor for the link arrows size.
    * Default value: `1`
diff --git a/src/helper.ts b/src/helper.ts
index f41f8b99d579e58ba8717d61a517effcced86025..a9214a6eb8a5017374f00895e138f5fb6e6f5004 100644
--- a/src/helper.ts
+++ b/src/helper.ts
@@ -1,6 +1,6 @@
 import { color as d3Color } from 'd3-color'
 import regl from 'regl'
-import { ColorAccessor, NumericAccessor, StringAccessor } from './config'
+import { ColorAccessor, NumericAccessor, StringAccessor, BooleanAccessor } from './config'
 
 export const isFunction = <T>(a: T): boolean => typeof a === 'function'
 export const isArray = <T>(a: unknown | T[]): a is T[] => Array.isArray(a)
@@ -15,7 +15,7 @@ export const isPlainObject = <T>(a: T): boolean => isObject(a) && !isArray(a) &&
 
 export function getValue<T, ReturnType> (
   d: T,
-  accessor: NumericAccessor<T> | StringAccessor<T> | ColorAccessor<T>,
+  accessor: NumericAccessor<T> | StringAccessor<T> | ColorAccessor<T> | BooleanAccessor<T>,
   index?: number
 ): ReturnType | null | undefined {
   // eslint-disable-next-line @typescript-eslint/ban-types
diff --git a/src/index.ts b/src/index.ts
index 299df6b2f59a42e5184773c6264d76d468e28f76..bd04f1c1e68f242edd8bba44c2d1346655cb3a19 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -139,6 +139,7 @@ export class Graph<N extends CosmosInputNode, L extends CosmosInputLink> {
     if (prevConfig.nodeColor !== this.config.nodeColor) this.points.updateColor()
     if (prevConfig.nodeSize !== this.config.nodeSize) this.points.updateSize()
     if (prevConfig.linkWidth !== this.config.linkWidth) this.lines.updateWidth()
+    if (prevConfig.linkArrows !== this.config.linkArrows) this.lines.updateArrow()
     if (prevConfig.backgroundColor !== this.config.backgroundColor) this.store.backgroundColor = getRgbaColor(this.config.backgroundColor)
     if (prevConfig.highlightedNodeRingColor !== this.config.highlightedNodeRingColor) {
       this.store.setHighlightedNodeRingColor(this.config.highlightedNodeRingColor)
diff --git a/src/modules/Lines/draw-straight.frag b/src/modules/Lines/draw-straight.frag
index 16e65bd293a21b6407db2853ba3afc2bf26ba77d..a63f154cf995ce9c57f1bdb13d5835e453b9fee0 100644
--- a/src/modules/Lines/draw-straight.frag
+++ b/src/modules/Lines/draw-straight.frag
@@ -1,13 +1,12 @@
 precision highp float;
 
-uniform bool useArrow;
-
 varying vec4 rgbaColor;
 varying vec2 pos;
 varying float arrowLength;
 varying float linkWidthArrowWidthRatio;
 varying float smoothWidthRatio;
 varying float targetPointSize;
+varying float arrowBoolean;
 
 float map(float value, float min1, float max1, float min2, float max2) {
   return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
@@ -17,7 +16,7 @@ void main() {
   float opacity = 1.0;
   vec3 color = rgbaColor.rgb;
   float smoothDelta = smoothWidthRatio / 2.0;
-  if (useArrow) {
+  if (arrowBoolean > 0.5) {
     float end_arrow = 0.5 + arrowLength / 2.0;
     float start_arrow = end_arrow - arrowLength;
     float arrowWidthDelta = linkWidthArrowWidthRatio / 2.0;
diff --git a/src/modules/Lines/draw-straight.vert b/src/modules/Lines/draw-straight.vert
index fb94e5dffb09f3780b714af6449aa787cd2449fe..7744a6b2ee9cd0dfc425f02b7f78ff8151f65f1d 100644
--- a/src/modules/Lines/draw-straight.vert
+++ b/src/modules/Lines/draw-straight.vert
@@ -2,6 +2,8 @@ precision highp float;
 attribute vec2 position, pointA, pointB;
 attribute vec4 color;
 attribute float width;
+attribute float arrow;
+
 uniform sampler2D positions;
 uniform sampler2D particleSize;
 uniform sampler2D particleGreyoutStatus;
@@ -9,7 +11,6 @@ uniform mat3 transform;
 uniform float pointsTextureSize;
 uniform float widthScale;
 uniform float nodeSizeScale;
-uniform bool useArrow;
 uniform float arrowSizeScale;
 uniform float spaceSize;
 uniform vec2 screenSize;
@@ -25,6 +26,7 @@ varying float arrowLength;
 varying float linkWidthArrowWidthRatio;
 varying float smoothWidthRatio;
 varying float targetPointSize;
+varying float arrowBoolean;
 
 float map(float value, float min1, float max1, float min2, float max2) {
   return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
@@ -76,9 +78,10 @@ void main() {
   float smoothWidth = 2.0;
   float arrowExtraWidth = arrowWidth - linkWidth;
   linkWidth += smoothWidth / 2.0;
-  if (useArrow) {
+  if (arrow > 0.5) {
     linkWidth += arrowExtraWidth;
   }
+  arrowBoolean = arrow;
   smoothWidthRatio = smoothWidth / linkWidth;
   linkWidthArrowWidthRatio = arrowExtraWidth / linkWidth;
 
diff --git a/src/modules/Lines/index.ts b/src/modules/Lines/index.ts
index 7bf5bda8f8b95eefdd85f55cdbf7413e8e7bd409..7b78d2cb2b24921d60924181e9fbd7945d8a8f4f 100644
--- a/src/modules/Lines/index.ts
+++ b/src/modules/Lines/index.ts
@@ -10,10 +10,12 @@ export class Lines<N extends CosmosInputNode, L extends CosmosInputLink> extends
   private drawStraightCommand: regl.DrawCommand | undefined
   private colorBuffer: regl.Buffer | undefined
   private widthBuffer: regl.Buffer | undefined
+  private arrowBuffer: regl.Buffer | undefined
 
   public create (): void {
     this.updateColor()
     this.updateWidth()
+    this.updateArrow()
   }
 
   public initPrograms (): void {
@@ -76,6 +78,12 @@ export class Lines<N extends CosmosInputNode, L extends CosmosInputLink> extends
           offset: Float32Array.BYTES_PER_ELEMENT * 0,
           stride: Float32Array.BYTES_PER_ELEMENT * 1,
         },
+        arrow: {
+          buffer: () => this.arrowBuffer,
+          divisor: 1,
+          offset: Float32Array.BYTES_PER_ELEMENT * 0,
+          stride: Float32Array.BYTES_PER_ELEMENT * 1,
+        },
       },
       uniforms: {
         positions: () => points?.currentPositionFbo,
@@ -85,7 +93,6 @@ export class Lines<N extends CosmosInputNode, L extends CosmosInputLink> extends
         pointsTextureSize: () => store.pointsTextureSize,
         nodeSizeScale: () => config.nodeSizeScale,
         widthScale: () => config.linkWidthScale,
-        useArrow: () => config.linkArrows,
         arrowSizeScale: () => config.linkArrowsSizeScale,
         spaceSize: () => config.spaceSize,
         screenSize: () => store.screenSize,
@@ -146,9 +153,20 @@ export class Lines<N extends CosmosInputNode, L extends CosmosInputLink> extends
     })
     this.widthBuffer = reglInstance.buffer(instancePoints)
   }
+  
+  public updateArrow(): void {
+    const { reglInstance, config, data } = this
+    const instancePoints: number[][] = []
+    data.completeLinks.forEach(l => {
+      const useArrow = getValue<L, boolean>(l, config.linkArrows)
+      instancePoints.push([useArrow ? 1 : 0 ?? 0])
+    })
+    this.arrowBuffer = reglInstance.buffer(instancePoints)
+  }
 
   public destroy (): void {
     this.colorBuffer?.destroy()
     this.widthBuffer?.destroy()
+    this.arrowBuffer?.destroy()
   }
 }
